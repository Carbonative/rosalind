version: '2.1'

services:
  minio:
    image: 'minio/minio:RELEASE.2020-07-13T18-09-56Z'
    command: 'server /mnt/media-1 /mnt/media-2 /mnt/media-3 /mnt/media-4'
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_REGION=${MINIO_REGION}
    volumes:
      - '/mnt/media-1:/mnt/media-1'
      - '/mnt/media-2:/mnt/media-2'
      - '/mnt/media-3:/mnt/media-3'
      - '/mnt/media-4:/mnt/media-4'
    links:
      - broker

  caddy:
    build: './caddy'
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy-data:/data
    environment:
      - DNS_NAME=${DNS_NAME}
      - CLOUDFLARE_TOKEN=${CLOUDFLARE_TOKEN}
    ports:
      - '80:80'
      - '443:443'
    links:
      - minio

  optimizer:
    build: './optimizer'
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_REGION=${MINIO_REGION}
      - MINIO_HOST=minio
      - SOURCE_BUCKET=hzw-media-uploads
      - TARGET_BUCKET=hzw-media
      - MQTT_BROKER=tcp://broker:1883
      - MQTT_TOPIC=minio
    links:
      - broker
      - minio

  broker:
    image: eclipse-mosquitto:latest

  # minio-config:
  #   image: minio/mc
  #   links:
  #     - minio
  #   restart: on-failure
  #   environment:
  #     - MC_HOST_minio=http://${MINIO_ACCESS_KEY}:${MINIO_SECRET_KEY}@minio:9000
  #     - MINIO_HOST=minio
  #     - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
  #     - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
  #     - MINIO_REGION=${MINIO_REGION}
  #     - SOURCE_BUCKET=hzw-media-uploads
  #     - TARGET_BUCKET=hzw-media
  #     - MINIO_NOTIFY_MQTT_ENABLE=on
  #     - MINIO_NOTIFY_MQTT_BROKER=tcp://broker:1883
  #     - MINIO_NOTIFY_MQTT_TOPIC=minio
  #     - MINIO_NOTIFY_MQTT_QOS=2
  #   entrypoint: /bin/sh

  # mirror-up:
  #   image: 'minio/mc'
  #   command: 'mirror --watch minio/minio-test-replication s3/minio-test-replication'
  #   volumes:
  #     - './mc.config.json:/root/.mc/config.json'
  #   depends_on:
  #     minio:
  #       condition: service_healthy

  # mirror-down:
  #   image: 'minio/mc'
  #   entrypoint: '/mirror-down.sh'
  #   volumes:
  #     - './mc.config.json:/root/.mc/config.json'
  #     - './mirror-down.sh:/mirror-down.sh'
  #   depends_on:
  #     minio:
  #       condition: service_healthy
